{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/applereplacementservice","title":"var appleReplacementService: AppleReplacementService","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/categoriesservice","title":"var categoriesService: CategoriesService","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/episodesservice","title":"var episodesService: EpisodesService","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/hubservice","title":"var hubService: HubService","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/podcastsservice","title":"var podcastsService: PodcastsService","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/recentservice","title":"var recentService: RecentService","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/searchservice","title":"var searchService: SearchService","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/statsservice","title":"var statsService: StatsService","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/valueservice","title":"var valueService: ValueService","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/setup(apikey:apisecret:useragent:)","title":"static func setup(apiKey: String, apiSecret: String, userAgent: String)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastindexkit\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"path":"\/documentation\/podcastindexkit\/podcastindexkit\/observableobject-implementations","title":"ObservableObject Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastindexkit","title":"PodcastIndexKit","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/artistname","title":"let artistName: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/artworkurl100","title":"let artworkUrl100: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/artworkurl30","title":"let artworkUrl30: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/artworkurl60","title":"let artworkUrl60: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/artworkurl600","title":"let artworkUrl600: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/collectioncensoredname","title":"let collectionCensoredName: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/collectionexplicitness","title":"let collectionExplicitness: Explicitness","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/collectionhdprice","title":"let collectionHdPrice: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/collectionid","title":"let collectionId: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/collectionname","title":"let collectionName: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/collectionprice","title":"let collectionPrice: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/collectionviewurl","title":"let collectionViewUrl: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/contentadvisoryrating","title":"let contentAdvisoryRating: Rating","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/country","title":"let country: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/currency","title":"let currency: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/feedurl","title":"let feedUrl: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/genreids","title":"let genreIds: [Int]","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/genres","title":"let genres: [String]","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/kind","title":"let kind: EntityType","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/primarygenrename","title":"let primaryGenreName: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/releasedate","title":"let releaseDate: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/trackcensoredname","title":"let trackCensoredName: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/trackcount","title":"let trackCount: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/trackexplicitness","title":"let trackExplicitness: Explicitness","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/trackhdprice","title":"let trackHdPrice: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/trackhdrentalprice","title":"let trackHdRentalPrice: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/trackid","title":"let trackId: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/trackname","title":"let trackName: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/trackprice","title":"let trackPrice: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/trackrentalprice","title":"let trackRentalPrice: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/trackviewurl","title":"let trackViewUrl: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/wrappertype","title":"let wrapperType: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/applereplacementpodcast\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/applereplacementpodcast","title":"AppleReplacementPodcast","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/applereplacementsearchresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/applereplacementsearchresponse\/resultcount","title":"let resultCount: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/applereplacementsearchresponse\/results","title":"let results: [AppleReplacementPodcast]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/applereplacementsearchresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/applereplacementsearchresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/applereplacementsearchresponse","title":"AppleReplacementSearchResponse","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/applereplacementservice\/lookup(id:entity:pretty:)","title":"func lookup(id: String, entity: EntityType?, pretty: Bool) async throws -> AppleReplacementSearchResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/applereplacementservice\/search(byterm:pretty:)","title":"func search(byTerm: String, pretty: Bool) async throws -> AppleReplacementSearchResponse","type":"method"}],"path":"\/documentation\/podcastindexkit\/applereplacementservice","title":"AppleReplacementService","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/categoriesresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/categoriesresponse\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/categoriesresponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/categoriesresponse\/feeds","title":"let feeds: [Category]","type":"property"},{"path":"\/documentation\/podcastindexkit\/categoriesresponse\/status","title":"var status: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/categoriesresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/categoriesresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/categoriesresponse","title":"CategoriesResponse","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/categoriesservice\/list(pretty:)","title":"func list(pretty: Bool) async throws -> CategoriesResponse","type":"method"}],"path":"\/documentation\/podcastindexkit\/categoriesservice","title":"CategoriesService","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/category\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/category\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/category\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/category\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/category\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/category","title":"Category","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/dataresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/dataresponse\/data","title":"let data: PodcastIndexData?","type":"property"},{"path":"\/documentation\/podcastindexkit\/dataresponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/dataresponse\/feedcount","title":"let feedCount: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/dataresponse\/itemcount","title":"let itemCount: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/dataresponse\/max","title":"let max: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/dataresponse\/nextsince","title":"let nextSince: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/dataresponse\/since","title":"let since: Date?","type":"property"},{"path":"\/documentation\/podcastindexkit\/dataresponse\/status","title":"var status: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/dataresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/dataresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/dataresponse","title":"DataResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/destination\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/destination\/address","title":"let address: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/destination\/customkey","title":"let customKey: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/destination\/customvalue","title":"let customValue: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/destination\/fee","title":"let fee: Bool","type":"property"},{"path":"\/documentation\/podcastindexkit\/destination\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/destination\/split","title":"let split: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/destination\/type","title":"let type: DestinationType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/destination\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/destination\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/destination","title":"Destination","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episode\/chaptersurl","title":"let chaptersUrl: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/contentlink","title":"let contentLink: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/datecrawled","title":"let dateCrawled: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/datepublished","title":"let datePublished: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/datepublishedpretty","title":"let datePublishedPretty: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/duration","title":"let duration: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/enclosurelength","title":"let enclosureLength: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/enclosuretype","title":"let enclosureType: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/enclosureurl","title":"let enclosureUrl: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/endtime","title":"let endTime: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/episode","title":"let episode: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/episodetype","title":"let episodeType: EpisodeType","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/explicit","title":"let explicit: EpisodeExplicitStatus","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/feeddead","title":"let feedDead: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/feedduplicateof","title":"let feedDuplicateOf: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/feedid","title":"let feedId: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/feedimage","title":"let feedImage: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/feedimageurlhash","title":"let feedImageUrlHash: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/feeditunesid","title":"let feedItunesId: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/feedlanguage","title":"let feedLanguage: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/feedtitle","title":"let feedTitle: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/guid","title":"let guid: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/image","title":"let image: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/imageurlhash","title":"let imageUrlHash: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/link","title":"let link: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/persons","title":"let persons: [Person]","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/season","title":"let season: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/socialinteract","title":"let socialInteract: [SocialInteractData]","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/soundbite","title":"let soundbite: Soundbite","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/soundbites","title":"let soundbites: [Soundbite]","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/starttime","title":"let startTime: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/status","title":"let status: LivestreamStatus?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/transcripturl","title":"let transcriptUrl: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/transcripts","title":"let transcripts: [Transcript]","type":"property"},{"path":"\/documentation\/podcastindexkit\/episode\/value","title":"let value: Value","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/episode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/episode","title":"Episode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodearrayresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodearrayresponse\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodearrayresponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodearrayresponse\/items","title":"let items: [Episode]","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodearrayresponse\/liveitems","title":"let liveItems: [Episode]?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodearrayresponse\/query","title":"let query: EpisodeResponsesQuery","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodearrayresponse\/status","title":"var status: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodearrayresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/episodearrayresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/episodearrayresponse","title":"EpisodeArrayResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodedata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodeadded","title":"let episodeAdded: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodedescription","title":"let episodeDescription: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodeduration","title":"let episodeDuration: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodeenclosurelength","title":"let episodeEnclosureLength: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodeenclosuretype","title":"let episodeEnclosureType: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodeenclosureurl","title":"let episodeEnclosureUrl: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodeid","title":"let episodeId: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodeimage","title":"let episodeImage: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodetimestamp","title":"let episodeTimestamp: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodetitle","title":"let episodeTitle: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/episodetype","title":"let episodeType: EpisodeType","type":"property"},{"path":"\/documentation\/podcastindexkit\/episodedata\/feedid","title":"let feedId: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodedata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/episodedata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/episodedata","title":"EpisodeData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episoderesponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episoderesponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/episoderesponse\/episode","title":"let episode: Episode","type":"property"},{"path":"\/documentation\/podcastindexkit\/episoderesponse\/guid","title":"let guid: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episoderesponse\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episoderesponse\/podcastguid","title":"let podcastGuid: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/episoderesponse\/status","title":"var status: Bool","type":"property"},{"path":"\/documentation\/podcastindexkit\/episoderesponse\/url","title":"let url: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episoderesponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/episoderesponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/episoderesponse","title":"EpisodeResponse","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodesservice\/episodes(byfeedid:since:max:enclosure:fulltext:pretty:)","title":"func episodes(byFeedID: String, since: Date?, max: Int?, enclosure: String?, fulltext: Bool, pretty: Bool) async throws -> EpisodeArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/episodesservice\/episodes(byfeedurl:since:max:fulltext:pretty:)","title":"func episodes(byFeedURL: String, since: Date?, max: Int?, fulltext: Bool, pretty: Bool) async throws -> EpisodeArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/episodesservice\/episodes(byguid:feedid:feedurl:fulltext:pretty:)","title":"func episodes(byGUID: String, feedid: String?, feedurl: String?, fulltext: Bool, pretty: Bool) async throws -> EpisodeResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/episodesservice\/episodes(byid:fulltext:pretty:)","title":"func episodes(byID: String, fulltext: Bool, pretty: Bool) async throws -> EpisodeResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/episodesservice\/episodes(bypodcastguid:since:max:fulltext:pretty:)","title":"func episodes(byPodcastGUID: String, since: Date?, max: Int?, fulltext: Bool, pretty: Bool) async throws -> EpisodeArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/episodesservice\/episodes(byitunesid:since:max:enclosure:fulltext:pretty:)","title":"func episodes(byiTunesID: String, since: Date?, max: Int?, enclosure: String?, fulltext: Bool, pretty: Bool) async throws -> EpisodeArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/episodesservice\/liveepisodes(max:pretty:)","title":"func liveEpisodes(max: Int?, pretty: Bool) async throws -> EpisodeArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/episodesservice\/randomepisodes(max:lang:cat:notcat:fulltext:pretty:)","title":"func randomEpisodes(max: Int?, lang: String?, cat: String?, notcat: String?, fulltext: Bool, pretty: Bool) async throws -> EpisodeArrayResponse","type":"method"}],"path":"\/documentation\/podcastindexkit\/episodesservice","title":"EpisodesService","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/hubservice\/pubnotify(id:url:pretty:)","title":"func pubNotify(id: String?, url: String?, pretty: Bool) async throws -> PubNotifyResponse","type":"method"}],"path":"\/documentation\/podcastindexkit\/hubservice","title":"HubService","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/person\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/person\/group","title":"let group: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/person\/href","title":"let href: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/person\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/person\/img","title":"let img: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/person\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/person\/role","title":"let role: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/person\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/person\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/person","title":"Person","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcast\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcast\/artwork","title":"let artwork: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/author","title":"let author: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/categories","title":"let categories: [String : String]?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/chash","title":"let chash: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/contenttype","title":"let contentType: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/crawlerrors","title":"let crawlErrors: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/dead","title":"let dead: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/episodecount","title":"let episodeCount: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/explicit","title":"let explicit: Bool?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/funding","title":"let funding: PodcastFunding?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/generator","title":"let generator: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/id","title":"let id: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/image","title":"let image: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/imageurlhash","title":"let imageUrlHash: Double","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/itunesid","title":"let itunesId: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/itunestype","title":"let itunesType: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/language","title":"let language: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/lastcrawltime","title":"let lastCrawlTime: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/lastgoodhttpstatustime","title":"let lastGoodHttpStatusTime: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/lasthttpstatus","title":"let lastHttpStatus: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/lastparsetime","title":"let lastParseTime: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/lastupdatetime","title":"let lastUpdateTime: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/link","title":"let link: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/locked","title":"let locked: PodcastLocked","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/newestitempubdate","title":"let newestItemPubdate: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/originalurl","title":"let originalUrl: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/ownername","title":"let ownerName: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/parseerrors","title":"let parseErrors: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/podcastguid","title":"let podcastGuid: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/type","title":"let type: PodcastType","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/url","title":"let url: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcast\/value","title":"let value: PodcastValue?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcast\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcast\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcast","title":"Podcast","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastarrayresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastarrayresponse\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastarrayresponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastarrayresponse\/feeds","title":"let feeds: [Podcast]","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastarrayresponse\/query","title":"let query: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastarrayresponse\/status","title":"var status: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastarrayresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcastarrayresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastarrayresponse","title":"PodcastArrayResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastdata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastdata\/feeddescription","title":"let feedDescription: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastdata\/feedid","title":"let feedId: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastdata\/feedimage","title":"let feedImage: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastdata\/feeditunesid","title":"let feedItunesId: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastdata\/feedlanguage","title":"let feedLanguage: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastdata\/feedtitle","title":"let feedTitle: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastdata\/feedurl","title":"let feedUrl: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcastdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastdata","title":"PodcastData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastfunding\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastfunding\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastfunding\/url","title":"let url: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastfunding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcastfunding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastfunding","title":"PodcastFunding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastindexdata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastindexdata\/feeds","title":"let feeds: [PodcastData]","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastindexdata\/items","title":"let items: [EpisodeData]","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastindexdata\/position","title":"let position: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastindexdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcastindexdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastindexdata","title":"PodcastIndexData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastresponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastresponse\/feed","title":"let feed: Podcast?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastresponse\/query","title":"let query: PodcastResponsesQuery?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastresponse\/status","title":"var status: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcastresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastresponse","title":"PodcastResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastresponsesquery\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastresponsesquery\/guid","title":"let guid: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastresponsesquery\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastresponsesquery\/url","title":"let url: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastresponsesquery\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcastresponsesquery\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastresponsesquery","title":"PodcastResponsesQuery","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastvalue\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastvalue\/destinations","title":"let destinations: [PodcastValueDestination]","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastvalue\/model","title":"let model: PodcastValueModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcastvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastvalue","title":"PodcastValue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastvaluedestination\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastvaluedestination\/address","title":"let address: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastvaluedestination\/customkey","title":"let customKey: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastvaluedestination\/customvalue","title":"let customValue: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastvaluedestination\/fee","title":"let fee: Bool?","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastvaluedestination\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastvaluedestination\/split","title":"let split: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastvaluedestination\/type","title":"let type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastvaluedestination\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcastvaluedestination\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastvaluedestination","title":"PodcastValueDestination","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastvaluemodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastvaluemodel\/method","title":"let method: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastvaluemodel\/suggested","title":"let suggested: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/podcastvaluemodel\/type","title":"let type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastvaluemodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcastvaluemodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastvaluemodel","title":"PodcastValueModel","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastsservice\/deadpodcasts(pretty:)","title":"func deadPodcasts(pretty: Bool) async throws -> PodcastArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/podcastsservice\/podcast(byfeedid:pretty:)","title":"func podcast(byFeedId: Int, pretty: Bool) async throws -> PodcastResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/podcastsservice\/podcast(byfeedurl:pretty:)","title":"func podcast(byFeedUrl: String, pretty: Bool) async throws -> PodcastResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/podcastsservice\/podcast(byguid:pretty:)","title":"func podcast(byGuid: String, pretty: Bool) async throws -> PodcastResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/podcastsservice\/podcast(byitunesid:pretty:)","title":"func podcast(byItunesId: Int, pretty: Bool) async throws -> PodcastResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/podcastsservice\/podcast(bymedium:max:pretty:)","title":"func podcast(byMedium: String, max: Int?, pretty: Bool) async throws -> PodcastArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/podcastsservice\/podcastbytag(max:startat:pretty:)","title":"func podcastByTag(max: Int?, startAt: String?, pretty: Bool) async throws -> PodcastArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/podcastsservice\/trendingpodcasts(max:since:lang:cat:notcat:pretty:)","title":"func trendingPodcasts(max: Int?, since: Date?, lang: String?, cat: String?, notcat: String?, pretty: Bool) async throws -> PodcastArrayResponse","type":"method"}],"path":"\/documentation\/podcastindexkit\/podcastsservice","title":"PodcastsService","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/pubnotifyresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/pubnotifyresponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/pubnotifyresponse\/status","title":"var status: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/pubnotifyresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/pubnotifyresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/pubnotifyresponse","title":"PubNotifyResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/randomepisoderesponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/randomepisoderesponse\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/randomepisoderesponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/randomepisoderesponse\/episodes","title":"let episodes: [Episode]","type":"property"},{"path":"\/documentation\/podcastindexkit\/randomepisoderesponse\/max","title":"let max: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/randomepisoderesponse\/status","title":"var status: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/randomepisoderesponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/randomepisoderesponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/randomepisoderesponse","title":"RandomEpisodeResponse","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/recentservice\/recentdata(max:since:pretty:)","title":"func recentData(max: Int?, since: Date?, pretty: Bool) async throws -> DataResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/recentservice\/recentepisodes(max:excludestring:before:fulltext:pretty:)","title":"func recentEpisodes(max: Int?, excludeString: String?, before: Date?, fulltext: Bool, pretty: Bool) async throws -> EpisodeArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/recentservice\/recentfeeds(max:since:lang:cat:notcat:pretty:)","title":"func recentFeeds(max: Int?, since: Date?, lang: String?, cat: String?, notcat: String?, pretty: Bool) async throws -> PodcastArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/recentservice\/recentnewfeeds(max:since:feedid:desc:pretty:)","title":"func recentNewFeeds(max: Int?, since: Date?, feedid: String?, desc: Bool, pretty: Bool) async throws -> PodcastArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/recentservice\/recentsoundbites(max:pretty:)","title":"func recentSoundbites(max: Int?, pretty: Bool) async throws -> SoundbiteArrayResponse","type":"method"}],"path":"\/documentation\/podcastindexkit\/recentservice","title":"RecentService","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/searchservice\/search(byperson:max:fulltext:pretty:)","title":"func search(byPerson: String, max: Int?, fulltext: Bool, pretty: Bool) async throws -> PodcastArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/searchservice\/search(byterm:val:max:aponly:clean:fulltext:pretty:)","title":"func search(byTerm: String, val: String?, max: Int?, aponly: Bool?, clean: Bool, fulltext: Bool, pretty: Bool) async throws -> PodcastArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/searchservice\/search(bytitle:val:max:clean:fulltext:pretty:similar:)","title":"func search(byTitle: String, val: String?, max: Int?, clean: Bool, fulltext: Bool, pretty: Bool, similar: Bool) async throws -> PodcastArrayResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/searchservice\/searchmusic(byterm:val:max:aponly:clean:fulltext:pretty:)","title":"func searchMusic(byTerm: String, val: String?, max: Int?, aponly: Bool?, clean: Bool, fulltext: Bool, pretty: Bool) async throws -> PodcastArrayResponse","type":"method"}],"path":"\/documentation\/podcastindexkit\/searchservice","title":"SearchService","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/accountid","title":"let accountId: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/accounturl","title":"let accountUrl: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/priority","title":"let priority: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/protocol","title":"let `protocol`: SocialInteractData.SocialIteractProtocol","type":"property"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/url","title":"let url: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/activitypub","title":"case activitypub","type":"case"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/disabled","title":"case disabled","type":"case"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/lightning","title":"case lightning","type":"case"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/twitter","title":"case twitter","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/socialinteractdata\/socialiteractprotocol","title":"SocialInteractData.SocialIteractProtocol","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/socialinteractdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/socialinteractdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/socialinteractdata","title":"SocialInteractData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/soundbite\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/soundbite\/duration","title":"let duration: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbite\/enclosureurl","title":"let enclosureUrl: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbite\/episodeid","title":"let episodeId: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbite\/episodetitle","title":"let episodeTitle: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbite\/feedid","title":"let feedId: Int?","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbite\/feedtitle","title":"let feedTitle: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbite\/feedurl","title":"let feedUrl: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbite\/starttime","title":"let startTime: Date","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbite\/title","title":"let title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/soundbite\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/soundbite\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/soundbite","title":"Soundbite","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/soundbitearrayresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/soundbitearrayresponse\/count","title":"let count: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbitearrayresponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbitearrayresponse\/items","title":"let items: [Soundbite]","type":"property"},{"path":"\/documentation\/podcastindexkit\/soundbitearrayresponse\/status","title":"var status: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/soundbitearrayresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/soundbitearrayresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/soundbitearrayresponse","title":"SoundbiteArrayResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/statproperties\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/statproperties\/episodecounttotal","title":"let episodeCountTotal: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/statproperties\/feedcounttotal","title":"let feedCountTotal: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/statproperties\/feedswithnewepisodes10days","title":"let feedsWithNewEpisodes10days: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/statproperties\/feedswithnewepisodes30days","title":"let feedsWithNewEpisodes30days: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/statproperties\/feedswithnewepisodes3days","title":"let feedsWithNewEpisodes3days: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/statproperties\/feedswithnewepisodes90days","title":"let feedsWithNewEpisodes90days: Int","type":"property"},{"path":"\/documentation\/podcastindexkit\/statproperties\/feedswithvalueblocks","title":"let feedsWithValueBlocks: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/statproperties\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/statproperties\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/statproperties","title":"StatProperties","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/statsresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/statsresponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/statsresponse\/stats","title":"let stats: [StatProperties]","type":"property"},{"path":"\/documentation\/podcastindexkit\/statsresponse\/status","title":"var status: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/statsresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/statsresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/statsresponse","title":"StatsResponse","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/statsservice\/current(pretty:)","title":"func current(pretty: Bool) async throws -> StatsResponse","type":"method"}],"path":"\/documentation\/podcastindexkit\/statsservice","title":"StatsService","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/transcript\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/transcript\/type","title":"let type: Transcript.TranscriptType","type":"property"},{"path":"\/documentation\/podcastindexkit\/transcript\/url","title":"let url: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/htmltext","title":"case htmlText","type":"case"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/jsonapplication","title":"case jsonApplication","type":"case"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/plaintext","title":"case plainText","type":"case"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/srtapplication","title":"case srtApplication","type":"case"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/srttext","title":"case srtText","type":"case"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/vtttext","title":"case vttText","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/transcript\/transcripttype","title":"Transcript.TranscriptType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/transcript\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/transcript\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/transcript","title":"Transcript","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/value\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/value\/destinations","title":"let destinations: [Destination]","type":"property"},{"path":"\/documentation\/podcastindexkit\/value\/model","title":"let model: ValueModel","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/value\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/value\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/value","title":"Value","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuemodel\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuemodel\/method","title":"let method: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/valuemodel\/suggested","title":"let suggested: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/valuemodel\/type","title":"let type: ValueModelType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuemodel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/valuemodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/valuemodel","title":"ValueModel","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuequery\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuequery\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/podcastindexkit\/valuequery\/url","title":"let url: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuequery\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/valuequery\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/valuequery","title":"ValueQuery","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valueresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valueresponse\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/podcastindexkit\/valueresponse\/query","title":"let query: ValueQuery","type":"property"},{"path":"\/documentation\/podcastindexkit\/valueresponse\/status","title":"var status: Bool","type":"property"},{"path":"\/documentation\/podcastindexkit\/valueresponse\/value","title":"let value: Value","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valueresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/valueresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/valueresponse","title":"ValueResponse","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valueservice\/value(byfeedid:pretty:)","title":"func value(byFeedID: String, pretty: Bool) async throws -> ValueResponse","type":"method"},{"path":"\/documentation\/podcastindexkit\/valueservice\/value(byfeedurl:pretty:)","title":"func value(byFeedURL: String, pretty: Bool) async throws -> ValueResponse","type":"method"}],"path":"\/documentation\/podcastindexkit\/valueservice","title":"ValueService","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/destinationtype\/node","title":"case node","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/destinationtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/destinationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/destinationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/destinationtype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/destinationtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/destinationtype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/destinationtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/destinationtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/destinationtype","title":"DestinationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/entitytype\/podcast","title":"case podcast","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/entitytype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/entitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/entitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/entitytype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/entitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/entitytype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/entitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/entitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/entitytype","title":"EntityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus\/explicit","title":"case explicit","type":"case"},{"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus\/notexplicit","title":"case notExplicit","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/episodeexplicitstatus","title":"EpisodeExplicitStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episoderesponsesquery\/multiple(_:)","title":"case multiple([String])","type":"case"},{"path":"\/documentation\/podcastindexkit\/episoderesponsesquery\/single(_:)","title":"case single(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episoderesponsesquery\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episoderesponsesquery\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episoderesponsesquery\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/episoderesponsesquery\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/episoderesponsesquery","title":"EpisodeResponsesQuery","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodetype\/bonus","title":"case bonus","type":"case"},{"path":"\/documentation\/podcastindexkit\/episodetype\/full","title":"case full","type":"case"},{"path":"\/documentation\/podcastindexkit\/episodetype\/trailer","title":"case trailer","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/episodetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodetype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/episodetype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/episodetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/episodetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/episodetype","title":"EpisodeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/explicitness\/cleaned","title":"case cleaned","type":"case"},{"path":"\/documentation\/podcastindexkit\/explicitness\/explicit","title":"case explicit","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/explicitness\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/explicitness\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/explicitness\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/explicitness\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/explicitness\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/explicitness\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/explicitness\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/explicitness\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/explicitness","title":"Explicitness","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/livestreamstatus\/ended","title":"case ended","type":"case"},{"path":"\/documentation\/podcastindexkit\/livestreamstatus\/live","title":"case live","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/livestreamstatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/livestreamstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/livestreamstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/livestreamstatus\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/livestreamstatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/livestreamstatus\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/livestreamstatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/livestreamstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/livestreamstatus","title":"LivestreamStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastlocked\/no","title":"case no","type":"case"},{"path":"\/documentation\/podcastindexkit\/podcastlocked\/yes","title":"case yes","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastlocked\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastlocked\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcastlocked\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastlocked\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastlocked\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcastlocked\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/podcastlocked\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/podcastlocked\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcastlocked","title":"PodcastLocked","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcasttype\/atom","title":"case atom","type":"case"},{"path":"\/documentation\/podcastindexkit\/podcasttype\/rss","title":"case rss","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcasttype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcasttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/podcasttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcasttype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcasttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/podcasttype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/podcasttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/podcasttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/podcasttype","title":"PodcastType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/rating\/clean","title":"case clean","type":"case"},{"path":"\/documentation\/podcastindexkit\/rating\/explicit","title":"case explicit","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/rating\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/rating\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/rating\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/rating\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/rating\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/rating\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/rating\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/rating\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/rating","title":"Rating","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuemodeltype\/hive","title":"case hive","type":"case"},{"path":"\/documentation\/podcastindexkit\/valuemodeltype\/lightning","title":"case lightning","type":"case"},{"path":"\/documentation\/podcastindexkit\/valuemodeltype\/webmonetization","title":"case webmonetization","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuemodeltype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuemodeltype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/podcastindexkit\/valuemodeltype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuemodeltype\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuemodeltype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/podcastindexkit\/valuemodeltype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/podcastindexkit\/valuemodeltype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/podcastindexkit\/valuemodeltype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/podcastindexkit\/valuemodeltype","title":"ValueModelType","type":"enum"}],"path":"\/documentation\/podcastindexkit","title":"PodcastIndexKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}